{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY, REMOVE_CART } from '../actions';\nconst initialState = JSON.parse(localStorage.getItem('cart')) || {};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  let cartList = { ...state\n  };\n\n  switch (type) {\n    case UPDATE_QUANTITY:\n      cartList[payload.name].quantity += payload.number;\n      break;\n\n    case REMOVE_FROM_CART:\n      delete cartList[payload.name];\n      break;\n\n    case ADD_TO_CART:\n      cartList[payload.name] = { ...payload,\n        quantity: payload.number\n      };\n      break;\n\n    case REMOVE_CART:\n      cartList = {};\n      break;\n\n    default:\n      break;\n  }\n\n  localStorage.setItem('cart', JSON.stringify(cartList));\n  return cartList;\n});","map":{"version":3,"sources":["/home/leandromarten/www/desafioEyemobile/frontend/src/redux/reducers/cartReducer.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","UPDATE_QUANTITY","REMOVE_CART","initialState","JSON","parse","localStorage","getItem","state","type","payload","cartList","name","quantity","number","setItem","stringify"],"mappings":"AAAA,SACIA,WADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,WAJJ,QAKS,YALT;AAOE,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAAjE;AAEA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuB;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC1D,MAAIC,QAAQ,GAAG,EAAE,GAAGH;AAAL,GAAf;;AAEA,UAAQC,IAAR;AACE,SAAKR,eAAL;AACEU,MAAAA,QAAQ,CAACD,OAAO,CAACE,IAAT,CAAR,CAAuBC,QAAvB,IAAmCH,OAAO,CAACI,MAA3C;AACA;;AAEF,SAAKd,gBAAL;AACE,aAAOW,QAAQ,CAACD,OAAO,CAACE,IAAT,CAAf;AACA;;AAEF,SAAKb,WAAL;AACEY,MAAAA,QAAQ,CAACD,OAAO,CAACE,IAAT,CAAR,GAAyB,EAAE,GAAGF,OAAL;AAAcG,QAAAA,QAAQ,EAAEH,OAAO,CAACI;AAAhC,OAAzB;AACA;;AAEF,SAAKZ,WAAL;AACES,MAAAA,QAAQ,GAAG,EAAX;AACA;;AAEF;AACE;AAlBJ;;AAoBAL,EAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeL,QAAf,CAA7B;AACA,SAAOA,QAAP;AACD,CAzBD","sourcesContent":["import {\n    ADD_TO_CART,\n    REMOVE_FROM_CART,\n    UPDATE_QUANTITY,\n    REMOVE_CART,\n  } from '../actions';\n  \n  const initialState = JSON.parse(localStorage.getItem('cart')) || {};\n  \n  export default (state = initialState, { type, payload }) => {\n    let cartList = { ...state };\n  \n    switch (type) {\n      case UPDATE_QUANTITY:\n        cartList[payload.name].quantity += payload.number;\n        break;\n  \n      case REMOVE_FROM_CART:\n        delete cartList[payload.name];\n        break;\n  \n      case ADD_TO_CART:\n        cartList[payload.name] = { ...payload, quantity: payload.number };\n        break;\n  \n      case REMOVE_CART:\n        cartList = {};\n        break;\n  \n      default:\n        break;\n    }\n    localStorage.setItem('cart', JSON.stringify(cartList));\n    return cartList;\n  };"]},"metadata":{},"sourceType":"module"}